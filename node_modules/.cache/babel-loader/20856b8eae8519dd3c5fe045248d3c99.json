{"ast":null,"code":"var _jsxFileName = \"/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/AddVinylForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Input, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddVinylForm() {\n  _s();\n\n  const [bandName, setBandName] = useState(\"\");\n  const [albumTitle, setAlbumTitle] = useState(\"\");\n  const [imageURL, setImageURL] = useState(\"\");\n  const [yearReleased, setYearReleased] = useState(\"\");\n  const [inProduction, setInProduction] = useState(\"\");\n  const history = useHistory();\n\n  function whatUserNamedBand(e) {\n    setBandName(e.target.value);\n  }\n\n  function whatUserTitledAlbum(e) {\n    setAlbumTitle(e.target.value);\n  }\n\n  function whatUserImaged(e) {\n    setImageURL(e.target.value);\n  }\n\n  function whatUserYearReleased(e) {\n    setYearReleased(e.target.value);\n  }\n\n  function whatUserInProduction(e) {\n    setInProduction(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newVinylData = {\n      band_name: bandName,\n      album_title: albumTitle,\n      image_url: imageURL,\n      year_released: yearReleased,\n      in_production: inProduction\n    };\n    fetch('http://localhost:3000/vinyls', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newVinylData)\n    }).then(res => res.json()).then(newBeerData => {\n      history.push(\"/vinyls\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Vinyl Form \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bandname\",\n        className: \"label\",\n        children: \"Band Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input\",\n        id: \"bandname\",\n        value: bandName,\n        onChange: whatUserNamedBand,\n        type: \"text\",\n        placeholder: \"Band Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"albumtitle\",\n        className: \"label\",\n        children: \"Album Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input\",\n        id: \"albumtitle\",\n        value: albumTitle,\n        onChange: whatUserTitledAlbum,\n        type: \"text\",\n        placeholder: \"Album Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageURL\",\n        className: \"label\",\n        children: \"Album Cover URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input\",\n        id: \"imageURL\",\n        value: imageURL,\n        onChange: whatUserImaged,\n        type: \"url\",\n        placeholder: \"Album Cover URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yearreleased\",\n        className: \"label\",\n        children: \"Year Released\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: \"input\",\n        id: \"yearreleased\",\n        value: yearReleased,\n        onChange: whatUserYearReleased,\n        type: \"text\",\n        placeholder: \"Year Released\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inProduction\",\n        className: \"label\",\n        children: \"In Productin?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: inProduction,\n        onChange: whatUserInProduction,\n        id: \"inProduction\",\n        name: \"In-production\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: true,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: false,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit New Vinyl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddVinylForm, \"YJPBIB5HNcx3/bJgJ2RQDubQx40=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddVinylForm;\nexport default AddVinylForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVinylForm\");","map":{"version":3,"sources":["/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/AddVinylForm.js"],"names":["useState","useHistory","Input","Button","AddVinylForm","bandName","setBandName","albumTitle","setAlbumTitle","imageURL","setImageURL","yearReleased","setYearReleased","inProduction","setInProduction","history","whatUserNamedBand","e","target","value","whatUserTitledAlbum","whatUserImaged","whatUserYearReleased","whatUserInProduction","handleSubmit","preventDefault","newVinylData","band_name","album_title","image_url","year_released","in_production","fetch","method","headers","body","JSON","stringify","then","res","json","newBeerData","push"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {Input, Button} from 'semantic-ui-react'\n\nfunction AddVinylForm(){\n  const [bandName, setBandName] = useState(\"\")\n  const [albumTitle, setAlbumTitle] = useState(\"\")\n  const [imageURL, setImageURL] = useState(\"\")\n  const [yearReleased, setYearReleased] = useState(\"\")\n  const [inProduction, setInProduction] = useState(\"\")\n  const history = useHistory()\n\n  function whatUserNamedBand(e){\n    setBandName(e.target.value)\n  }\n\n  function whatUserTitledAlbum(e){\n    setAlbumTitle(e.target.value)\n  }\n\n  function whatUserImaged(e){\n    setImageURL(e.target.value)\n  }\n\n  function whatUserYearReleased(e){\n    setYearReleased(e.target.value)\n  }\n\n  function whatUserInProduction(e){\n    setInProduction(e.target.value)\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    const newVinylData = {\n      band_name: bandName,\n      album_title: albumTitle,\n      image_url: imageURL,\n      year_released: yearReleased,\n      in_production: inProduction\n    }\n    fetch('http://localhost:3000/vinyls', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newVinylData)\n    })\n      .then(res => res.json())\n      .then(newBeerData => {\n        history.push(\"/vinyls\")\n      })\n  }\n\n  return (\n    <div>\n      <h2>Add Vinyl Form </h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"bandname\" className=\"label\">Band Name</label>\n        <Input className=\"input\" id=\"bandname\" value={bandName} onChange={whatUserNamedBand} type=\"text\" placeholder=\"Band Name\"></Input>\n        <label htmlFor=\"albumtitle\" className=\"label\">Album Title</label>\n        <Input className=\"input\" id=\"albumtitle\" value={albumTitle} onChange={whatUserTitledAlbum} type=\"text\" placeholder=\"Album Title\"></Input>\n        <label htmlFor=\"imageURL\" className=\"label\">Album Cover URL</label>\n        <Input className=\"input\" id=\"imageURL\" value={imageURL} onChange={whatUserImaged} type=\"url\" placeholder=\"Album Cover URL\"></Input>\n        <label htmlFor=\"yearreleased\" className=\"label\">Year Released</label>\n        <Input className=\"input\" id=\"yearreleased\" value={yearReleased} onChange={whatUserYearReleased} type=\"text\" placeholder=\"Year Released\"></Input>\n        <label htmlFor=\"inProduction\" className=\"label\">In Productin?</label>\n        <select value={inProduction} onChange={whatUserInProduction} id=\"inProduction\" name=\"In-production\">\n          <option value={true}>Yes</option>\n          <option value={false}>No</option>\n        </select>\n        <Button>Submit New Vinyl</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddVinylForm"]},"metadata":{},"sourceType":"module"}