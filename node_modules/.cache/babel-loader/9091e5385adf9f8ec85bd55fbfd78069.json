{"ast":null,"code":"var _jsxFileName = \"/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Modal, Input } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount({\n  onLogin\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      name: name,\n      password: password,\n      email: email,\n      image_url: imgUrl\n    };\n    fetch(\"https://peaceful-hollows-67278.herokuapp.com/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(resp => resp.json()).then(newUserObj => {\n      localStorage.setItem('name', newUserObj.name);\n      localStorage.setItem('user', newUserObj.user);\n      localStorage.setItem('token', newUserObj.token);\n      onLogin(newUserObj);\n      history.push('/vinyls');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"modal-button\",\n      id: \"create-account\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this),\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Name\",\n          required: true,\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Password\",\n          required: true,\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Email\",\n          required: true,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Profile Picture\",\n          required: true,\n          type: \"url\",\n          value: imgUrl,\n          onChange: e => setImgUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAccount, \"uunbIGbC//19MavK9jUDUtkgIdg=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/CreateAccount.js"],"names":["Form","Button","Modal","Input","useState","useHistory","CreateAccount","onLogin","open","setOpen","name","setName","password","setPassword","email","setEmail","imgUrl","setImgUrl","history","handleSubmit","e","preventDefault","newUser","image_url","fetch","method","headers","body","JSON","stringify","then","resp","json","newUserObj","localStorage","setItem","user","token","push","target","value"],"mappings":"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","sourcesContent":["import {Form, Button, Modal, Input} from 'semantic-ui-react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction CreateAccount({onLogin}){\n  const [open, setOpen] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [imgUrl, setImgUrl] = useState(\"\")\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const newUser = {\n      name: name,\n      password: password,\n      email: email,\n      image_url: imgUrl\n    }\n    fetch(\"https://peaceful-hollows-67278.herokuapp.com/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    })\n    .then(resp => resp.json())\n    .then(newUserObj => {\n      localStorage.setItem('name', newUserObj.name)\n      localStorage.setItem('user', newUserObj.user)\n      localStorage.setItem('token', newUserObj.token)\n      onLogin(newUserObj)\n      history.push('/vinyls')\n    })\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button className=\"modal-button\" id=\"create-account\">Create Account</Button>}\n      className=\"modal\"\n      >\n        <Modal.Header>Create Account</Modal.Header>\n          <Form onSubmit={e => handleSubmit(e)}>\n            <Form.Field>\n              <Input placeholder=\"Name\" required value={name} onChange={e => setName(e.target.value)}/>\n            </Form.Field>\n            <Form.Field>\n              <Input placeholder=\"Password\" required type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/>\n            </Form.Field>\n            <Form.Field>\n              <Input placeholder=\"Email\" required type = \"email\"  value={email} onChange={e => setEmail(e.target.value)}/>\n            </Form.Field>\n            <Form.Field>\n              <Input placeholder=\"Profile Picture\" required type=\"url\" value={imgUrl} onChange={e => setImgUrl(e.target.value)}/>\n            </Form.Field>\n            <Button type='submit'>Submit</Button>\n          </Form>\n        </Modal>\n  )\n}\n\nexport default CreateAccount"]},"metadata":{},"sourceType":"module"}