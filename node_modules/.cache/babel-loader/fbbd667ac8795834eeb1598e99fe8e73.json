{"ast":null,"code":"var _jsxFileName = \"/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/VinylModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Modal, Image, Input, Rating, Form, Button, Comment, Icon } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VinylModal({\n  id,\n  tag,\n  loggedInUser\n}) {\n  _s();\n\n  const [vinyl, setVinyl] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [userTitle, setUserTitle] = useState(\"\");\n  const [userContent, setUserContent] = useState(\"\");\n  const [userRating, setUserRating] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [userId, setUserId] = useState(\"All\");\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/vinyls/${id}`).then(res => res.json()).then(vinylData => {\n      setVinyl(vinylData);\n      setReviews(vinylData.reviews);\n      setIsLoaded(true);\n    });\n  }, [id]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  const {\n    band_name,\n    album_title,\n    image_url,\n    year_released,\n    in_production\n  } = vinyl;\n\n  function handleDelete(id) {\n    fetch(`http://localhost:3000/reviews/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.token}`\n      }\n    }).then(res => res.json()).then(deletedReview => {\n      const updatedReviewArray = reviews.filter(review => review.id !== deletedReview.id);\n      setReviews(updatedReviewArray);\n    });\n  }\n\n  const reviewArray = reviews.map(reviewObj => /*#__PURE__*/_jsxDEV(Comment, {\n    children: /*#__PURE__*/_jsxDEV(Comment.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Comment.Author, {\n        children: reviewObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comment.Author, {\n        children: [\"By: \", reviewObj.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comment.Text, {\n        children: reviewObj.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Comment.Text, {\n        children: [\"Rating: \", reviewObj.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), loggedInUser.user === reviewObj.user_id ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"trash alternate\",\n        onClick: () => handleDelete(reviewObj.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 52\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, reviewObj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n\n  function rateAlbum(e, {\n    rating,\n    maxRating\n  }) {\n    setUserRating({\n      rating,\n      maxRating\n    });\n  }\n\n  function handleReviewSubmit(e) {\n    e.preventDefault();\n    const reviewData = {\n      vinyl_id: id,\n      title: userTitle,\n      content: userContent,\n      rating: parseInt(userRating)\n    };\n    fetch(\"http://localhost:3000/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.token}`,\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(reviewData)\n    }).then(res => res.json()).then(newReview => {\n      setReviews([...reviews, newReview]);\n      setUserTitle(\"\");\n      setUserContent(\"\");\n    });\n  }\n\n  function checkTag(tag) {\n    if (tag === \"review\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image_url,\n        alt: album_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: checkTag(tag),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: album_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"medium\",\n          src: image_url,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: band_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year Released: \", year_released]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Still in Production? \", in_production]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Average User Rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Comment.Group, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), reviewArray, /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"rate-title\",\n              children: \"Rate this album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleReviewSubmit,\n              reply: true,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: userTitle,\n                placeholder: \"Your Title\",\n                onChange: e => setUserTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                value: userContent,\n                placeholder: \"Your Review\",\n                onChange: e => setUserContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                onRate: rateAlbum,\n                value: userRating,\n                maxRating: 5,\n                clearable: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                content: \"Add Review\",\n                labelPosition: \"left\",\n                icon: \"edit\",\n                primary: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VinylModal, \"xBqPco+XXKUZpAEQlKjb6u99c/Q=\");\n\n_c = VinylModal;\nexport default VinylModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VinylModal\");","map":{"version":3,"sources":["/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/VinylModal.js"],"names":["useState","useEffect","Modal","Image","Input","Rating","Form","Button","Comment","Icon","VinylModal","id","tag","loggedInUser","vinyl","setVinyl","isLoaded","setIsLoaded","userTitle","setUserTitle","userContent","setUserContent","userRating","setUserRating","open","setOpen","userId","setUserId","reviews","setReviews","fetch","then","res","json","vinylData","band_name","album_title","image_url","year_released","in_production","handleDelete","method","headers","localStorage","token","deletedReview","updatedReviewArray","filter","review","reviewArray","map","reviewObj","title","user","name","content","rating","user_id","rateAlbum","e","maxRating","handleReviewSubmit","preventDefault","reviewData","vinyl_id","parseInt","body","JSON","stringify","newReview","checkTag","target","value"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport {Modal, Image, Input, Rating, Form, Button, Comment, Icon} from 'semantic-ui-react'\n\nfunction VinylModal({id, tag, loggedInUser}){\n  const [vinyl, setVinyl] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [userTitle, setUserTitle] = useState(\"\")\n  const [userContent, setUserContent] = useState(\"\")\n  const [userRating, setUserRating] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [userId, setUserId] = useState(\"All\")\n  const [reviews, setReviews] = useState([])\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/vinyls/${id}`)\n      .then(res => res.json())\n      .then(vinylData => {\n        setVinyl(vinylData)\n        setReviews(vinylData.reviews)\n        setIsLoaded(true)\n      })\n  }, [id])\n\n  if (!isLoaded) return <p>Loading...</p>\n\n  const {band_name, album_title, image_url, year_released, in_production} = vinyl\n  \n  function handleDelete(id){\n    fetch(`http://localhost:3000/reviews/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.token}`,\n      }\n    })\n      .then(res => res.json())\n      .then((deletedReview) => {\n        const updatedReviewArray = reviews.filter(review =>\n          review.id !== deletedReview.id\n        )\n        setReviews(updatedReviewArray)\n      })\n  }\n\n  const reviewArray = reviews.map(reviewObj => \n    <Comment key={reviewObj.id}>\n      <Comment.Content>\n        <Comment.Author>{reviewObj.title}</Comment.Author>\n        <Comment.Author>By: {reviewObj.user.name}</Comment.Author>\n        <Comment.Text>{reviewObj.content}</Comment.Text>\n        <Comment.Text>Rating: {reviewObj.rating}</Comment.Text>\n        {loggedInUser.user === reviewObj.user_id ? <Icon name=\"trash alternate\" onClick={() => handleDelete(reviewObj.id)}></Icon> : null}\n      </Comment.Content>\n    </Comment>\n  )\n\n  function rateAlbum(e, {rating, maxRating}){\n    setUserRating({rating, maxRating})\n  }\n\n  function handleReviewSubmit(e){\n    e.preventDefault()\n    const reviewData = {\n      vinyl_id: id,\n      title: userTitle,\n      content: userContent,\n      rating: parseInt(userRating)\n    }\n    fetch(\"http://localhost:3000/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.token}`,\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(reviewData)\n    })\n      .then(res => res.json())\n      .then(newReview => {\n        setReviews([...reviews, newReview])\n        setUserTitle(\"\")\n        setUserContent(\"\")\n\n      })\n  }\n\n  function checkTag(tag) {\n    if (tag === \"review\") {\n      return <img src={image_url} alt={album_title}/>\n    } else {\n      return <Button>Details</Button>\n    }\n  }\n\n  return (\n    <div>\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={checkTag(tag)}>\n        <Modal.Header>{album_title}</Modal.Header>\n        <Modal.Content image>\n          <Image size='medium' src={image_url} wrapped />\n          <Modal.Description>\n            <h3>{band_name}</h3>\n            <p>Year Released: {year_released}</p>\n            <p>Still in Production? {in_production}</p>\n            <p>Average User Rating: </p>\n          <Comment.Group>\n            <h3>Reviews</h3>\n            {reviewArray}\n            <h4 className=\"rate-title\">Rate this album</h4>\n            <Form onSubmit={handleReviewSubmit} reply>\n              <Input value={userTitle} placeholder=\"Your Title\" onChange={e => setUserTitle(e.target.value)}/>\n              <Input value={userContent} placeholder=\"Your Review\" onChange={e => setUserContent(e.target.value)}/>\n              <Rating onRate={rateAlbum} value={userRating} maxRating={5} clearable/>\n              <Button content='Add Review' labelPosition='left' icon='edit' primary />\n            </Form>\n          </Comment.Group>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n    </div>\n  )\n}\n\nexport default VinylModal"]},"metadata":{},"sourceType":"module"}