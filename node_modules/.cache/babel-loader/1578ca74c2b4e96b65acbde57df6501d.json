{"ast":null,"code":"var _jsxFileName = \"/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Modal, Input } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount({\n  onLogin\n}) {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      name: name,\n      password: password,\n      email: email,\n      image_url: imgUrl\n    };\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(resp => resp.json()).then(newUserObj => {\n      localStorage.token = newUserObj.token;\n      onLogin(newUserObj);\n      history.push('/vinyls');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"modal-button\",\n      id: \"create-account\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this),\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Profile Picture\",\n        required: true,\n        type: \"url\",\n        value: imgUrl,\n        onChange: e => setImgUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAccount, \"uunbIGbC//19MavK9jUDUtkgIdg=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/jbrundagejr/Development/code/Mod4/phase-4-final/frontend/vinyl-app/src/components/CreateAccount.js"],"names":["Form","Button","Modal","Input","useState","useHistory","CreateAccount","onLogin","open","setOpen","name","setName","password","setPassword","email","setEmail","imgUrl","setImgUrl","history","handleSubmit","e","preventDefault","newUser","image_url","fetch","method","headers","body","JSON","stringify","then","resp","json","newUserObj","localStorage","token","push","target","value"],"mappings":"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","sourcesContent":["import {Form, Button, Modal, Input} from 'semantic-ui-react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nfunction CreateAccount({onLogin}){\n  const [open, setOpen] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [imgUrl, setImgUrl] = useState(\"\")\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    const newUser = {\n      name: name,\n      password: password,\n      email: email,\n      image_url: imgUrl\n    }\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    })\n    .then(resp => resp.json())\n    .then(newUserObj => {\n      localStorage.token = newUserObj.token\n      onLogin(newUserObj)\n      history.push('/vinyls')\n    })\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button className=\"modal-button\" id=\"create-account\">Create Account</Button>}\n      className=\"modal\">\n        <Modal.Header>Create Account</Modal.Header>\n        <Form onSubmit={e => handleSubmit(e)}>\n          <Input placeholder=\"Name\" required value={name} onChange={e => setName(e.target.value)}/>\n          <Input placeholder=\"Password\" type=\"password\" required value={password} onChange={e => setPassword(e.target.value)}/>\n          <Input placeholder=\"Email\" required value={email} onChange={e => setEmail(e.target.value)}/>\n          <Input placeholder=\"Profile Picture\" required type=\"url\" value={imgUrl} onChange={e => setImgUrl(e.target.value)}/>\n          <Button type='submit'>Submit</Button>\n        </Form>\n    </Modal>\n  )\n}\n\nexport default CreateAccount"]},"metadata":{},"sourceType":"module"}